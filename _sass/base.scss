/* ==========================================================================
   Settings
   ========================================================================== */

/*
 * Breakpoints and Grid
 * Breakpoints are identical to Bootstrap v4.3
 * Source: https://getbootstrap.com/docs/4.3/layout/grid/
 */

$breakpoint-small: 576px;
$breakpoint-medium: 768px;
$breakpoint-large: 992px;
$breakpoint-x-large: 1200px;

$grid-padding-x-small: 20px;
$grid-padding-small: 20px;
$grid-padding-medium: 20px;
$grid-padding-large: 50px;
$grid-padding-x-large: 50px;

$grid-max-width: 1200px;

/*
 * Text styles
 */

$text-mobile-base-size: 20px;
$text-desktop-base-size: 24px;

$text-mobile-font-scale: 1.25;
$text-desktop-font-scale: 1.25;

$text-bodycopy-line-height: 1.5;
$text-heading-line-height: 1.1;
$text-letter-spacing: 0.5px;

/*
 * Colors
 */

$color-accent: #0000FF;
$color-accent-on-dark: #1ec0f9;
$color-black: #14181e;
$color-white: #ffffff;

/*
 * Spacing
 */

$spacing-base: 10px;

/* ==========================================================================
   Grid and layout
   ========================================================================== */

/*
 * Responsive mixin
 * Source: https://medium.com/developing-with-sass/creating-a-dead-simple-sass-mixin-to-handle-responsive-breakpoints-889927b37740
 * Usage: @include breakpoint(small) { ... }
 */

@mixin breakpoint($class) {
  @if $class == x-small {
    @media (max-width: $breakpoint-small) {
      @content;
    }
  } @else if $class == small {
    @media (min-width: $breakpoint-small) {
      @content;
    }
  } @else if $class == medium {
    @media (min-width: $breakpoint-medium) {
      @content;
    }
  } @else if $class == large {
    @media (min-width: $breakpoint-large) {
      @content;
    }
  } @else if $class == x-large {
    @media (min-width: $breakpoint-x-large) {
      @content;
    }
  } @else {
    @warn "Breakpoint mixin supports: x-small, small, medium, large, x-large";
  }
}

/*
 * Grid container for keeping elements in the grid.
 */

 @mixin grid-container() {
  box-sizing: border-box;
  padding-left: $grid-padding-x-small;
  padding-right: $grid-padding-x-small;
  width: 100%;

  @include breakpoint(small) {
    padding-left: $grid-padding-small;
    padding-right: $grid-padding-small;
  }

  @include breakpoint(medium) {
    padding-left: $grid-padding-medium;
    padding-right: $grid-padding-medium;
  }

  @include breakpoint(large) {
    padding-left: $grid-padding-large;
    padding-right: $grid-padding-large;
  }

  @include breakpoint(x-large) {
    margin-left: auto;
    margin-right: auto;
    padding-left: $grid-padding-x-large;
    padding-right: $grid-padding-x-large;
    width: 1200px;
  }
 }

/* ==========================================================================
   Text styles
   ========================================================================== */

/*
 * Fonts
 */

@font-face {
  font-family: "Europa";
  src: url("/assets/fonts/europa-regular-webfont.woff2") format("woff2"),
    url("/assets/fonts/europa-regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "Europa";
  src: url("/assets/fonts/europa-bold-webfont.woff2") format("woff2"), url("/assets/fonts/europa-bold-webfont.woff") format("woff");
  font-weight: bold;
  font-style: normal;
}

/*
 * Text style mixins
 * Usage: @include text-style(heading-1);
 */

@mixin text-style($style) {
  @if $style == heading-1 {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size * $text-mobile-font-scale * $text-mobile-font-scale * $text-mobile-font-scale;
    letter-spacing: $text-letter-spacing;
    line-height: $text-heading-line-height;
    margin-bottom: 0.4em;

    @include breakpoint(large) {
    font-size: $text-desktop-base-size * $text-desktop-font-scale * $text-desktop-font-scale * $text-desktop-font-scale;
    }
  }
  @else if $style == heading-2 {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size * $text-mobile-font-scale * $text-mobile-font-scale;
    letter-spacing: $text-letter-spacing;
    line-height: $text-heading-line-height;
    margin-top: $spacing-base * 8;
    margin-bottom: $spacing-base * 1.5;

    @include breakpoint(large) {
      font-size: $text-desktop-base-size * $text-desktop-font-scale * $text-desktop-font-scale;
      margin-top: $spacing-base * 12;
      margin-bottom: $spacing-base * 2;
    }
  }
  @else if $style == heading-3 {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size * $text-mobile-font-scale;
    letter-spacing: $text-letter-spacing;
    line-height: $text-heading-line-height;

    @include breakpoint(large) {
      font-size: $text-desktop-base-size * $text-desktop-font-scale;
    }
  }
  @else if $style == heading-4 {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size;
    letter-spacing: $text-letter-spacing;
    line-height: $text-heading-line-height;
    margin-bottom: 0;

    @include breakpoint(large) {
      font-size: $text-desktop-base-size;
    }
  }
  @else if $style == body {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size;
    letter-spacing: $text-letter-spacing;
    line-height: $text-bodycopy-line-height;
    margin-top: 0.4em;
    margin-bottom: 1em;

    @include breakpoint(large) {
      font-size: $text-desktop-base-size;
    }
  }
  @else if $style == small {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size / $text-mobile-font-scale;
    letter-spacing: $text-letter-spacing;
    line-height: $text-bodycopy-line-height;
  
    @include breakpoint(large) {
      font-size: $text-desktop-base-size / $text-mobile-font-scale;
    }
  }
  @else if $style == x-small {
    color: $color-black;
    font-family: Europa;
    font-size: $text-mobile-base-size / $text-mobile-font-scale / $text-mobile-font-scale;
    letter-spacing: $text-letter-spacing;
    line-height: $text-bodycopy-line-height;
  
    @include breakpoint(large) {
      font-size: $text-desktop-base-size / $text-mobile-font-scale / $text-mobile-font-scale;
    }
  }
  @else if $style == white {
    color: $color-white;
    & a {
      box-shadow: 0 2px 0 $color-accent;
    }
  }
  @else if $style == bold {
    font-weight: bold;
  }
  @else if $style == link {
    box-shadow: 0 4px 0 -2px $color-accent;
    color: inherit;
    text-decoration: none;

    &:hover {
      box-shadow: 0 4px 0 -2px $color-accent;
      color: $color-accent;
    }
  }
  @else {
    @warn "Text-style mixin supports: small, body, heading-3, heading-2, heading-1, white, bold.";
  }
}

/*
 * Improve readability.
 */

*,
*::before,
*::after {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/*
 * Links
 */

a {
  text-decoration: none;
}

/*
 * Inline and markdown text styles.
 */

h1 {
  @include text-style(heading-1);
}

h2 {
  @include text-style(heading-2);
}

h3 {
  @include text-style(heading-3);
}

h4 {
  @include text-style(body);
  @include text-style(bold);
}

h5 {
  @include text-style(body);
  @include text-style(bold);
}

p {
  @include text-style(body);
}

p a,
h1 a,
h2 a,
h3 a,
h4 a,
h5 a {
  box-shadow: 0 4px 0 -2px $color-black;
  color: inherit;
  text-decoration: none;

  &:hover {
    box-shadow: 0 4px 0 -2px $color-black;
    color: inherit;
  }
}